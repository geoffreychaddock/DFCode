{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "factoryName": {
            "type": "string",
            "metadata": "Data Factory name",
            "defaultValue": "HEDDFUK"
        },
        "MaxMinBatchFileLS_connectionString": {
            "type": "secureString",
            "metadata": "Secure string for 'connectionString' of 'MaxMinBatchFileLS'"
        },
        "MaxMinSaleLS_connectionString": {
            "type": "secureString",
            "metadata": "Secure string for 'connectionString' of 'MaxMinSaleLS'"
        },
        "MaxMinSale_ArchiveLS_connectionString": {
            "type": "secureString",
            "metadata": "Secure string for 'connectionString' of 'MaxMinSale_ArchiveLS'"
        }
    },
    "variables": {
        "factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
    },
    "resources": [
        {
            "name": "[concat(parameters('factoryName'), '/CopyMaxMinSalesPL')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Archive Partition Data",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Create New Partition",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "additionalColumns": [
                                    {
                                        "name": "DateArchived",
                                        "value": {
                                            "value": "@utcnow()",
                                            "type": "Expression"
                                        }
                                    },
                                    {
                                        "name": "PipelineGuid",
                                        "value": {
                                            "value": "@pipeline().RunId",
                                            "type": "Expression"
                                        }
                                    }
                                ],
                                "queryTimeout": "02:00:00",
                                "isolationLevel": "ReadUncommitted",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "writeBehavior": "insert",
                                "sqlWriterUseTableLock": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "PK_Sales_Information_ID",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "PK_Sales_Information_ID",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "FK_Time",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        },
                                        "sink": {
                                            "name": "FK_Time",
                                            "type": "DateTime",
                                            "physicalType": "datetime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "FK_Customer",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "FK_Customer",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "FK_Product",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "FK_Product",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "FK_Promotion",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "FK_Promotion",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "FK_Sales_Person",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "FK_Sales_Person",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "FK_Store",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "FK_Store",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Sales_in_Dollars",
                                            "type": "Decimal",
                                            "physicalType": "money",
                                            "scale": 4,
                                            "precision": 19
                                        },
                                        "sink": {
                                            "name": "Sales_in_Dollars",
                                            "type": "Decimal",
                                            "physicalType": "money",
                                            "scale": 4,
                                            "precision": 19
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Sales_in_Units",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "Sales_in_Units",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Sales_Tax",
                                            "type": "Decimal",
                                            "physicalType": "money",
                                            "scale": 4,
                                            "precision": 19
                                        },
                                        "sink": {
                                            "name": "Sales_Tax",
                                            "type": "Decimal",
                                            "physicalType": "money",
                                            "scale": 4,
                                            "precision": 19
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Shipping",
                                            "type": "Decimal",
                                            "physicalType": "money",
                                            "scale": 4,
                                            "precision": 19
                                        },
                                        "sink": {
                                            "name": "Shipping",
                                            "type": "Decimal",
                                            "physicalType": "money",
                                            "scale": 4,
                                            "precision": 19
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "DateArchived"
                                        },
                                        "sink": {
                                            "name": "DateArchived",
                                            "type": "DateTime",
                                            "physicalType": "smalldatetime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "PipelineGuid"
                                        },
                                        "sink": {
                                            "name": "PipelineID",
                                            "type": "Guid",
                                            "physicalType": "uniqueidentifier"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "MaxMinSalesDS",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "MaxMinSale_ArchiveDS",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    },
                    {
                        "name": "Create New Partition",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[dbo].[usp_SplitPartition]",
                            "storedProcedureParameters": {
                                "NewPartitionBoundry": {
                                    "value": {
                                        "value": "@pipeline().parameters.NewPartitionBoundry",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "MaxMinSaleLS",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Merge Old Partition",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Archive Partition Data",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[dbo].[usp_MergePartition]",
                            "storedProcedureParameters": {
                                "RemovePartitionBoundry": {
                                    "value": {
                                        "value": "@pipeline().parameters.RemovePartitionBoundry",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "MaxMinSaleLS",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "NewPartitionBoundry": {
                        "type": "string",
                        "defaultValue": "31Dec2011"
                    },
                    "RemovePartitionBoundry": {
                        "type": "string",
                        "defaultValue": "31Dec2007"
                    }
                },
                "folder": {
                    "name": "MaxMinSalesEOYProcess"
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/MaxMinSalesDS')]",
                "[concat(variables('factoryId'), '/datasets/MaxMinSale_ArchiveDS')]",
                "[concat(variables('factoryId'), '/linkedServices/MaxMinSaleLS')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ImportManufacturingDataPL')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "DimBatchDF",
                        "type": "ExecuteDataFlow",
                        "dependsOn": [
                            {
                                "activity": "Record Load Metadata",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "1.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataflow": {
                                "referenceName": "DimBatchDF",
                                "type": "DataFlowReference",
                                "parameters": {
                                    "BatchFile": {
                                        "value": "'@{pipeline().parameters.BatchFile}'",
                                        "type": "Expression"
                                    }
                                },
                                "datasetParameters": {
                                    "BatchFile": {
                                        "BatchFileImport": {
                                            "value": "@pipeline().parameters.BatchFile",
                                            "type": "Expression"
                                        }
                                    },
                                    "DimBatch": {}
                                }
                            },
                            "staging": {},
                            "compute": {
                                "coreCount": 8,
                                "computeType": "General"
                            },
                            "traceLevel": "Fine"
                        }
                    },
                    {
                        "name": "Clear Down Tables",
                        "type": "Script",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "linkedServiceName": {
                            "referenceName": "MaxMinSaleLS",
                            "type": "LinkedServiceReference"
                        },
                        "typeProperties": {
                            "scripts": [
                                {
                                    "type": "Query",
                                    "text": "truncate table manufacturing.DimBatch"
                                }
                            ]
                        }
                    },
                    {
                        "name": "Record Load Metadata",
                        "type": "Script",
                        "dependsOn": [
                            {
                                "activity": "Clear Down Tables",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "linkedServiceName": {
                            "referenceName": "MaxMinSaleLS",
                            "type": "LinkedServiceReference"
                        },
                        "typeProperties": {
                            "scripts": [
                                {
                                    "type": "NonQuery",
                                    "text": {
                                        "value": "@concat('insert into dba.BatchFileLoadHistory select ''', pipeline().parameters.BatchFile, ''', getdate() , ''', pipeline().RunId, '''')\n\n\n",
                                        "type": "Expression"
                                    }
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "BatchFile": {
                        "type": "string",
                        "defaultValue": "Mar.csv"
                    }
                },
                "folder": {
                    "name": "MaxMinSalesEOYProcess"
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/dataflows/DimBatchDF')]",
                "[concat(variables('factoryId'), '/linkedServices/MaxMinSaleLS')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/MaxMinBatchfileDS')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "MaxMinBatchFileLS",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "BatchFileImport": {
                        "type": "string",
                        "defaultValue": "jan.csv"
                    }
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "fileName": {
                            "value": "@dataset().BatchFileImport",
                            "type": "Expression"
                        },
                        "folderPath": "BatchFiles",
                        "container": "landing"
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": [
                    {
                        "name": "BatchNumber",
                        "type": "String"
                    },
                    {
                        "name": "MachineNumber",
                        "type": "String"
                    },
                    {
                        "name": "ProductCode",
                        "type": "String"
                    },
                    {
                        "name": "TimeStarted",
                        "type": "String"
                    },
                    {
                        "name": "TimeStopped",
                        "type": "String"
                    },
                    {
                        "name": "NumberProduced",
                        "type": "String"
                    },
                    {
                        "name": "NumberRejected",
                        "type": "String"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/MaxMinBatchFileLS')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/MaxMinDimBatch')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "MaxMinSaleLS",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [
                    {
                        "name": "BatchNumber",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "BatchName",
                        "type": "nvarchar"
                    }
                ],
                "typeProperties": {
                    "schema": "Manufacturing",
                    "table": "DimBatch"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/MaxMinSaleLS')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/MaxMinSale_ArchiveDS')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "MaxMinSale_ArchiveLS",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [
                    {
                        "name": "PK_Sales_Information_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "FK_Time",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    },
                    {
                        "name": "FK_Customer",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "FK_Product",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "FK_Promotion",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "FK_Sales_Person",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "FK_Store",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "Sales_in_Dollars",
                        "type": "money",
                        "precision": 19,
                        "scale": 4
                    },
                    {
                        "name": "Sales_in_Units",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "Sales_Tax",
                        "type": "money",
                        "precision": 19,
                        "scale": 4
                    },
                    {
                        "name": "Shipping",
                        "type": "money",
                        "precision": 19,
                        "scale": 4
                    },
                    {
                        "name": "DateArchived",
                        "type": "smalldatetime",
                        "precision": 16,
                        "scale": 0
                    },
                    {
                        "name": "PipelineID",
                        "type": "uniqueidentifier"
                    }
                ],
                "typeProperties": {
                    "schema": "dbo",
                    "table": "Sales_Information"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/MaxMinSale_ArchiveLS')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/MaxMinSalesDS')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "MaxMinSaleLS",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [],
                "typeProperties": {
                    "schema": "Sales",
                    "table": "Sales_Information_Staging"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/MaxMinSaleLS')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/MaxMinBatchFileLS')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureBlobStorage",
                "typeProperties": {
                    "connectionString": "[parameters('MaxMinBatchFileLS_connectionString')]"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/MaxMinSaleLS')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureSqlDatabase",
                "typeProperties": {
                    "connectionString": "[parameters('MaxMinSaleLS_connectionString')]"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/MaxMinSale_ArchiveLS')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureSqlDatabase",
                "typeProperties": {
                    "connectionString": "[parameters('MaxMinSale_ArchiveLS_connectionString')]"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/DimBatchDF')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "MaxMinBatchfileDS",
                                "type": "DatasetReference"
                            },
                            "name": "BatchFile"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "MaxMinDimBatch",
                                "type": "DatasetReference"
                            },
                            "name": "DimBatch"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "ConvertToBatchName"
                        }
                    ],
                    "scriptLines": [
                        "parameters{",
                        "     BatchFile as string",
                        "}",
                        "source(output(",
                        "          BatchNumber as string,",
                        "          MachineNumber as string,",
                        "          ProductCode as string,",
                        "          TimeStarted as string,",
                        "          TimeStopped as string,",
                        "          NumberProduced as string,",
                        "          NumberRejected as string",
                        "     ),",
                        "     allowSchemaDrift: false,",
                        "     validateSchema: true,",
                        "     ignoreNoFilesFound: false) ~> BatchFile",
                        "BatchFile derive(BatchName = toString(BatchNumber),",
                        "          BatchNumber = toInteger(BatchNumber)) ~> ConvertToBatchName",
                        "ConvertToBatchName sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     input(",
                        "          BatchNumber as integer,",
                        "          BatchName as string",
                        "     ),",
                        "     deletable:false,",
                        "     insertable:true,",
                        "     updateable:false,",
                        "     upsertable:false,",
                        "     format: 'table',",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     errorHandlingOption: 'stopOnFirstError',",
                        "     mapColumn(",
                        "          BatchNumber,",
                        "          BatchName",
                        "     )) ~> DimBatch"
                    ]
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/MaxMinBatchfileDS')]",
                "[concat(variables('factoryId'), '/datasets/MaxMinDimBatch')]"
            ]
        }
    ]
}